fn while(condition, action, state)
    # parameter type checks
    if (type(condition) != "function") then
        out("The condition must be a function.");
        exit();
    else if (type(action) != "function") then
        out("The action must be a function.");
        exit();
    end if

    # while loop implementation
    if (condition(state) == true) then
        while(condition, action, action(state));
    end if
end fn

val condition = lm(x) return x > 0; end lm;

while(condition, lm(x)
    out(x);
    return x - 1;
end lm, 10);
